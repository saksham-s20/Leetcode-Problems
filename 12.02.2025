2342. Max Sum of a Pair With Equal Sum of Digits

class Solution {
public:
    int maximumSum(vector<int>& nums) {
        constexpr int kMax = 9 * 9;  // 999,999,999
    int ans = -1;
    vector<vector<int>> count(kMax + 1);

    for (const int num : nums)
      count[getDigitSum(num)].push_back(num);

    for (vector<int>& groupNums : count) {
      if (groupNums.size() < 2)
        continue;
      ranges::sort(groupNums, greater<>());
      ans = max(ans, groupNums[0] + groupNums[1]);
    }

    return ans;
  }

 private:
  int getDigitSum(int num) {
    int digitSum = 0;
    while (num > 0) {
      digitSum += num % 10;
      num /= 10;
    }
    return digitSum;
        // vector<int> arr;
        // int sum,add,count = 0;
        // int maxSum = 0;
        // for(int i=0;i<nums.size();i++){
        //     int n = nums[i];
        //     sum = 0;
        //     while(n>0){
        //         int a = n%10;
        //         sum = sum+a;
        //         n = n/ 10;
        //     }
        //     arr.push_back(sum);
        // }
        // for(int i=0;i<arr.size();i++){
        //     for(int j=i+1;j<arr.size();j++){
        //         if(arr[i] == arr[j]){
        //             add = nums[i] + nums[j];
        //             if(add > maxSum){
        //                 maxSum = add;
        //                 count++;
        //             }
        //         }
        //     }
        // }
        // if(count>=1){
        //     return maxSum;
        // }
        // else{
        //     return -1;
        // }
    }
};
